@model  QlikPlateformManager.ViewModels.ArchiverApplicationViewModel
@{
    //ViewBag.Title = "Liens";
    //Layout = "~/Views/Shared/_LayoutQmc.cshtml";
}

<script type="text/javascript">
    $.validator.unobtrusive.parse(document);



    

</script>
<div class="container-fluid" id="ArchivageApplicationDiv">

    @*ZONE ARIANE*@
    <div class="row">
        <div class="col-sm-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item active">Archivage</li>
                    <li class="breadcrumb-item active" aria-current="page">Application</li>
                </ol>
            </nav>
            <br />
        </div>
    </div>

    @*ZONE POST FORMULAIRE*@
    <div class="row">
        <div class="col-sm-12">
            @*@using (Html.BeginForm())*@
            @using (Ajax.BeginForm("Application", "Archiver", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "ArchivageApplicationDiv", OnBegin = "onBegin", OnComplete = "onComplete", OnFailure = "Erreur" }))
            {
                @*ZONE SAISIE*@
                <div class="row">
                    <div class="col-sm-12">
                        <fieldset class="form-group">
                            <legend>Sélection de l'application à archiver</legend>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServeurSource)
                                @*@Html.DropDownListFor(model => model.ServeurSource, new SelectList(Model._ServeurSource, "Value", "Text"), new { @class = "form-control", @onchange = "CallChangefunc(this.value)", @id = "serveurSource" })*@
                                @Html.DropDownListFor(model => model.ServeurSource, new SelectList(Model._ServeurSource, "Value", "Text"), new { @class = "form-control", @onchange = "OnChangeSelect(this);", @id = "serveurSource" })
                                @Html.ValidationMessageFor(model => model.ServeurSource, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FluxSource)
                                @Html.DropDownListFor(model => model.FluxSource, new SelectList(Model._FluxSource, "Value", "Text"), "", new { @class = "form-control", @onchange = "OnChangeSelect(this);", @id = "fluxSource" })
                                @Html.ValidationMessageFor(model => model.FluxSource, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApplicationSource)
                                @Html.DropDownListFor(model => model.ApplicationSource, new SelectList(Model._ApplicationSource, "Value", "Text"), "", new { @class = "form-control", @onchange = "OnChangeSelect(this);", @id = "applicationSource" })
                                @Html.ValidationMessageFor(model => model.ApplicationSource, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-check">
                                @Html.CheckBoxFor(model => model.AvecDonnees, new { @class = "form-check-input" })
                                @Html.LabelFor(model => model.AvecDonnees, new { @class = "form-check-label" })
                            </div>

                            <br />
                            <button id="ActionStateBtn" type="submit" class="btn btn-success">
                                @*disabled*@
                                <span id="ActionStateSpr" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display:none"></span> @*hidden*@
                                Archiver
                            </button>
                        </fieldset>
                    </div>
                </div>

                @*ZONE RESULTATS*@
                <div class="row">
                    <div id="ResultsDiv" class="col-sm-12">
                        @if (!String.IsNullOrEmpty(Model.Results.Title))
                        {
                            @Html.Partial("Results", Model.Results)
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
